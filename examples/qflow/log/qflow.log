Starting new log file Tue Jun 11 13:12:27 2019

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running yosys for verilog parsing and synthesis
yosys  -s map9v3.ys

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)


-- Executing script file `map9v3.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v' to AST representation.
Generating RTLIL representation for module `\map9v3'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \map9v3

3.1.2. Analyzing design hierarchy..
Top module:  \map9v3
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 5 switch rules as full_case in process $proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1 in module map9v3.
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
1/14: $0\dp[8:0] [8:1]
2/14: $0\dp[8:0] [0]
3/14: $0\sr[7:0] [0]
4/14: $0\sr[7:0] [2]
5/14: $0\sr[7:0] [3]
6/14: $0\sr[7:0] [4]
7/14: $0\sr[7:0] [5]
8/14: $0\sr[7:0] [6]
9/14: $0\sr[7:0] [7]
10/14: $0\sr[7:0] [1]
11/14: $0\done[0:0]
12/14: $0\counter[7:0]
13/14: $0\state[2:0]
14/14: $0\startbuf[1:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\map9v3.\startbuf' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$119' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\state' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$120' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\counter' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$121' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\sr' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$122' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\dp' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$123' with positive edge clock and positive level reset.
Creating register for signal `\map9v3.\done' using process `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
created $adff cell `$procdff$124' with positive edge clock and positive level reset.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 7 empty switches in `\map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
Removing empty process `map9v3.$proc$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:37$1'.
Cleaned up 7 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.
<suppressed ~3 debug messages>

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 0 unused cells and 50 unused wires.
<suppressed ~1 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module map9v3..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 0 unused cells and 50 unused wires.

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.6.9. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 bits (of 32) from port A of cell map9v3.$sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$4 ($sub).
Removed top 30 bits (of 32) from port B of cell map9v3.$add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5 ($add).
Removed top 24 bits (of 32) from port Y of cell map9v3.$add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5 ($add).
Removed top 24 bits (of 32) from port A of cell map9v3.$add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5 ($add).
Removed top 2 bits (of 3) from port B of cell map9v3.$eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:56$6 ($eq).
Removed top 31 bits (of 32) from port B of cell map9v3.$sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:65$11 ($sub).
Removed top 24 bits (of 32) from port Y of cell map9v3.$sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:65$11 ($sub).
Removed top 1 bits (of 3) from port B of cell map9v3.$eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:70$13 ($eq).
Removed top 1 bits (of 3) from port B of cell map9v3.$eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:75$14 ($eq).
Removed top 1 bits (of 2) from port B of cell map9v3.$eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:80$16 ($eq).
Removed top 24 bits (of 32) from port Y of cell map9v3.$sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$4 ($sub).
Removed top 24 bits (of 32) from wire map9v3.$add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5_Y.
Removed top 24 bits (of 32) from wire map9v3.$sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$4_Y.

3.8. Executing TECHMAP pass (map to technology primitives).

3.8.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~84 debug messages>

3.9. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module map9v3:
creating $macc model for $add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5 ($add).
creating $macc model for $sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$4 ($sub).
creating $macc model for $sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:65$11 ($sub).
merging $macc model for $sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$4 into $add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5.
creating $alu model for $macc $sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:65$11.
creating $macc cell for $add$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:51$5: $auto$alumacc.cc:354:replace_macc$127
creating $alu cell for $sub$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:65$11: $auto$alumacc.cc:474:replace_alu$128
created 1 $alu and 1 $macc cells.

3.10. Executing SHARE pass (SAT-based resource sharing).

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.11.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 1 unused cells and 53 unused wires.
<suppressed ~2 debug messages>

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 1 unused cells and 53 unused wires.

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.11.16. Finished OPT passes. (There is nothing left to do.)

3.12. Executing FSM pass (extract and optimize FSM).

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register map9v3.state.

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\map9v3'.
found $adff cell for state register: $procdff$120
root of input selection tree: $0\state[2:0]
found reset state: 3'000 (from async reset)
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:50$3_Y
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:56$6_Y
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:70$13_Y
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:75$14_Y
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:79$15_Y
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:80$16_Y
found state code: 3'100
found state code: 3'011
found ctrl input: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:66$12_Y
found state code: 3'010
found state code: 3'001
found ctrl output: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:50$3_Y
found ctrl output: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:56$6_Y
found ctrl output: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:70$13_Y
found ctrl output: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:75$14_Y
found ctrl output: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:79$15_Y
ctrl inputs: { $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:80$16_Y $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:66$12_Y }
ctrl outputs: { $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:79$15_Y $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:70$13_Y $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:56$6_Y $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:50$3_Y $0\state[2:0] $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:75$14_Y }
transition:      3'000 2'-- ->      3'001 8'00010010
transition:      3'100 2'0- ->      3'100 8'10001000
transition:      3'100 2'1- ->      3'000 8'10000000
transition:      3'010 2'-- ->      3'011 8'01000110
transition:      3'001 2'-0 ->      3'001 8'00100010
transition:      3'001 2'-1 ->      3'010 8'00100100
transition:      3'011 2'-- ->      3'100 8'00001001

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$131' from module `\map9v3'.

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 66 unused wires.
<suppressed ~14 debug messages>

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$131' from module `\map9v3'.
Removing unused output signal $0\state[2:0] [0].
Removing unused output signal $0\state[2:0] [1].
Removing unused output signal $0\state[2:0] [2].
Removing unused output signal $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:79$15_Y.

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$131' from module `\map9v3' using `auto' encoding:
mapping auto encoding to `one-hot` for this FSM.
000 -> ----1
100 -> ---1-
010 -> --1--
001 -> -1---
011 -> 1----

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$131' from module `\map9v3':
-------------------------------------

Information on FSM $fsm$\state$131 (\state):

Number of input signals:    2
Number of output signals:   4
Number of state bits:       5

Input signals:
0: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:66$12_Y
1: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:80$16_Y

Output signals:
0: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:75$14_Y
1: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:50$3_Y
2: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:56$6_Y
3: $eq$/home/openvlsi/openvlsi/examples/qflow/source/map9v3.v:70$13_Y

State encoding:
0:    5'----1  <RESET STATE>
1:    5'---1-
2:    5'--1--
3:    5'-1---
4:    5'1----

Transition Table (state_in, ctrl_in, state_out, ctrl_out):
0:     0 2'--   ->     3 4'0010
1:     1 2'1-   ->     0 4'0000
2:     1 2'0-   ->     1 4'0000
3:     2 2'--   ->     4 4'1000
4:     3 2'-1   ->     2 4'0100
5:     3 2'-0   ->     3 4'0100
6:     4 2'--   ->     1 4'0001

-------------------------------------

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$131' from module `\map9v3'.

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.
<suppressed ~4 debug messages>

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.13.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

3.13.5. Finished fast OPT passes.

3.14. Executing MEMORY pass.

3.14.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.14.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.

3.14.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.

3.14.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.

3.16. Executing OPT pass (performing simple optimizations).

3.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.
<suppressed ~1 debug messages>

3.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.16.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.

3.16.5. Finished fast OPT passes.

3.17. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.18. Executing OPT pass (performing simple optimizations).

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

3.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

3.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.18.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 14 unused cells and 76 unused wires.

3.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

3.18.9. Finished OPT passes. (There is nothing left to do.)

3.19. Executing TECHMAP pass (map to technology primitives).

3.19.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.19.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper maccmap for cells of type $macc.
sub \N [8:1] (8 bits, unsigned)
add 8'00000010 (8 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~260 debug messages>

3.20. Executing OPT pass (performing simple optimizations).

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.
<suppressed ~79 debug messages>

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

3.20.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 32 unused cells and 171 unused wires.
<suppressed ~12 debug messages>

3.20.5. Finished fast OPT passes.

3.21. Executing ABC pass (technology mapping using ABC).

3.21.1. Extracting gate netlist of module `\map9v3' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 187 wires to a netlist network with 42 inputs and 30 outputs.

3.21.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash
ABC: + dretime
ABC: + retime
ABC: + map
ABC: + write_blif <abc-temp-dir>/output.blif

3.21.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:       51
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       14
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:       13
ABC RESULTS:        internal signals:      115
ABC RESULTS:           input signals:       42
ABC RESULTS:          output signals:       30
Removing temp directory.

3.22. Executing OPT pass (performing simple optimizations).

3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.
<suppressed ~15 debug messages>

3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 32 unused cells and 295 unused wires.
<suppressed ~1 debug messages>

3.22.5. Finished fast OPT passes.

3.23. Executing HIERARCHY pass (managing design hierarchy).

3.23.1. Analyzing design hierarchy..
Top module:  \map9v3

3.23.2. Analyzing design hierarchy..
Top module:  \map9v3
Removed 0 unused modules.

3.24. Printing statistics.

=== map9v3 ===

Number of wires:                101
Number of wire bits:            158
Number of public wires:          10
Number of public wire bits:      45
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                146
$_ANDNOT_                      16
$_AND_                          2
$_AOI3_                         2
$_DFF_PP0_                     32
$_DFF_PP1_                      1
$_MUX_                         51
$_NOR_                          3
$_NOT_                          6
$_OAI3_                         2
$_OR_                          13
$_XNOR_                         5
$_XOR_                         13

3.25. Executing CHECK pass (checking for obvious problems).
checking module map9v3..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
final dff cell mappings:
DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\map9v3':
mapped 32 $_DFF_PP0_ cells to \DFFSR cells.
mapped 1 $_DFF_PP1_ cells to \DFFSR cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 32 unused cells and 327 unused wires.
<suppressed ~1 debug messages>

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\map9v3' to `<abc-temp-dir>/input.blif'..
Extracted 114 gates and 157 wires to a netlist network with 43 inputs and 31 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + map -M 1
ABC: + write_blif <abc-temp-dir>/output.blif

6.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:       14
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             INVX1 cells:       39
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:        7
ABC RESULTS:           NAND3X1 cells:       12
ABC RESULTS:            NOR2X1 cells:       14
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:       30
ABC RESULTS:           XNOR2X1 cells:        2
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:       83
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       31
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 157 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port map9v3.N: Missing option -inpad.
Don't map input port map9v3.clock: Missing option -inpad.
Mapping port map9v3.counter using BUFX2.
Mapping port map9v3.done using BUFX2.
Mapping port map9v3.dp using BUFX2.
Don't map input port map9v3.reset: Missing option -inpad.
Mapping port map9v3.sr using BUFX2.
Don't map input port map9v3.start: Missing option -inpad.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \map9v3..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \map9v3.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\map9v3'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \map9v3..
Removed 0 unused cells and 157 unused wires.

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module map9v3.

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing BLIF backend.

11. Printing statistics.

=== map9v3 ===

Number of wires:                125
Number of wire bits:            204
Number of public wires:         125
Number of public wire bits:     204
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                192
AND2X2                          4
AOI21X1                        14
AOI22X1                         2
BUFX2                          26
DFFSR                          33
INVX1                          39
MUX2X1                          7
NAND2X1                         7
NAND3X1                        12
NOR2X1                         14
NOR3X1                          1
OAI21X1                        30
XNOR2X1                         2
XOR2X1                          1

End of script. Logfile hash: 2e481e1716
CPU: user 0.38s system 0.04s, MEM: 39.00 MB total, 11.51 MB resident
Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)
Time spent: 13% 17x opt_expr (0 sec), 12% 16x opt_clean (0 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef
Cleaning up output syntax
ypostproc.tcl map9v3_mapped.blif map9v3 /usr/local/share/qflow/tech/osu035/osu035.sh vdd gnd
Yosys syntax postprocessing
Cleaning up blif file syntax
Running blifFanout (iterative)
Each iteration calls:
blifFanout -l 200 -c 30 -I map9v3_nofanout  -p /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib -b BUFX2,CLKBUF1 -i A,A -o Y,Y tmp.blif map9v3.blif
gates resized: 14
gates resized: 0
Generating RTL verilog and SPICE netlist file in directory
/home/openvlsi/openvlsi/examples/qflow/synthesis
Files:
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtl.v
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtlnopwr.v
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtlbb.v
Spice:   /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.spc
Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
spi2xspice.py "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" map9v3.spc map9v3.xspice
Reading liberty netlist /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
Reading spice netlist map9v3.spc
Writing xspice netlist map9v3.xspice
Writing xspice file
Done.

LEF Read, Line 135: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 136: NOTE:  Old format VIARULE ignored.
Qflow project setup
LEF Read, Line 140: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 141: NOTE:  Old format VIARULE ignored.

LEF Read, Line 151: NOTE:  Old format VIARULE ignored.
Technology set to osu035 from existing qflow_vars.sh file
LEF Read, Line 152: NOTE:  Old format VIARULE ignored.
Regenerating files for existing project map9v3
LEF Read, Line 156: NOTE:  Old format VIARULE ignored.
Qrouter detail maze router version 1.4.49.T
LEF Read, Line 157: NOTE:  Old format VIARULE ignored.
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
LEF Read, Line 167: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site corner (ignored)
LEF Read, Line 168: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site IO (ignored)
LEF Read, Line 172: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site core (ignored)
LEF Read, Line 173: NOTE:  Old format VIARULE ignored.
LEF read: Processed 3179 lines.
LEF Read: encountered 0 errors and 12 warnings total.
Vertical route layer at non-minimum pitch 3.2.  Using smaller pitch 1.6, will route on 1-of-2 tracks for layer metal4.
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.blif  --lef  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef --cel /home/openvlsi/openvlsi/examples/qflow/layout/map9v3.cel
No map9v3.cel1 file found for project. . . no partial blockages to apply to layout.
No map9v3.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  map9v3
Running getfillcell to determine cell to use for fill.
getfillcell.tcl map9v3  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Using cell FILL for fill
Running place2def to translate graywolf output to DEF format.
place2def.tcl map9v3 FILL
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  -stripe 5.0 150.0 PG map9v3  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Running arrangepins to adjust pin positions for optimal routing.
arrangepins.tcl  map9v3
Reading info file map9v3.info. . .
Reading DEF file map9v3.def. . .
Recalculating pin positions
Writing DEF file map9v3_mod.def. . .
Done with arrangepins.tcl
blifanno.tcl /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.blif map9v3.def /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3_anno.blif
Generating RTL verilog and SPICE netlist file in directory
/home/openvlsi/openvlsi/examples/qflow/synthesis
Files:
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtl.v
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtlnopwr.v
Verilog: /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.rtlbb.v
Spice:   /home/openvlsi/openvlsi/examples/qflow/synthesis/map9v3.spc
Copying map9v3.rtl.v, map9v3.rtlnopwr.v, and map9v3.rtlbb.v to backups
Running blif2Verilog.
Running blif2BSpice.

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running qrouter 1.4.49.T
qrouter -noc  -s map9v3.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running magic 8.2.110
magic -dnull -noconsole  migrate_map9v3.tcl

Magic 8.2 revision 110 - Compiled on Sun Apr 28 16:56:58 PDT 2019.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
Loading "migrate_map9v3.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
This action cannot be undone.
LEF Read, Line 16: Unknown keyword "OBS" in LEF file; ignoring.
LEF Read, Line 17: Unknown keyword "PIN" in LEF file; ignoring.
LEF file:  Defines site corner (ignored)
LEF file:  Defines site IO (ignored)
LEF file:  Defines site core (ignored)
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "A" from metal1 to m2contact in cell XNOR2X1.
LEF read: Processed 3179 lines.
LEF Read: encountered 2 errors total.
Reading DEF data from file map9v3.def.
This action cannot be undone.
Processed 3 vias total.
Processed 278 subcell instances total.
Processed 40 pins total.
Processed 219 nets total.
LEF Read, Line 3002: Warning:  Number of nets read (36) does not match the number declared (35).
DEF read: Processed 3003 lines.
LEF Read: encountered 1 error total.
Generating LEF output map9v3.lef for cell map9v3:
Diagnostic:  Write LEF header for cell map9v3
Diagnostic:  Writing LEF output for cell map9v3
Diagnostic:  Scale value is 0.050000
Extracting XOR2X1 into XOR2X1.ext:
Extracting NOR3X1 into NOR3X1.ext:
Extracting XNOR2X1 into XNOR2X1.ext:
Extracting NAND2X1 into NAND2X1.ext:
Extracting AOI22X1 into AOI22X1.ext:
Extracting CLKBUF1 into CLKBUF1.ext:
Extracting AND2X2 into AND2X2.ext:
Extracting OAI21X1 into OAI21X1.ext:
Extracting MUX2X1 into MUX2X1.ext:
Extracting NAND3X1 into NAND3X1.ext:
Extracting NOR2X1 into NOR2X1.ext:
Extracting AOI21X1 into AOI21X1.ext:
Extracting INVX1 into INVX1.ext:
Extracting FILL into FILL.ext:
Extracting DFFSR into DFFSR.ext:
Completed 100%
Extracting BUFX2 into BUFX2.ext:
Extracting map9v3 into map9v3.ext:
Completed 5%
Completed 11%
Completed 16%
Completed 21%
Completed 27%
Completed 32%
Completed 37%
Completed 42%
Completed 48%
Completed 53%
Completed 58%
Completed 64%
Completed 69%
Completed 74%
Completed 80%
Completed 85%
Completed 90%
Completed 95%
Completed 100%

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running magic 8.2.110
magic -dnull -noconsole  migrate_map9v3.tcl

Magic 8.2 revision 110 - Compiled on Sun Apr 28 16:56:58 PDT 2019.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
Loading "migrate_map9v3.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
This action cannot be undone.
LEF Read, Line 16: Unknown keyword "OBS" in LEF file; ignoring.
LEF Read, Line 17: Unknown keyword "PIN" in LEF file; ignoring.
LEF file:  Defines site corner (ignored)
LEF file:  Defines site IO (ignored)
LEF file:  Defines site core (ignored)
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "A" from metal1 to m2contact in cell XNOR2X1.
LEF read: Processed 3179 lines.
LEF Read: encountered 2 errors total.
Reading DEF data from file map9v3.def.
This action cannot be undone.
Processed 3 vias total.
Processed 278 subcell instances total.
Processed 40 pins total.
Processed 219 nets total.
LEF Read, Line 3002: Warning:  Number of nets read (36) does not match the number declared (35).
DEF read: Processed 3003 lines.
LEF Read: encountered 1 error total.
Generating LEF output map9v3.lef for cell map9v3:
Diagnostic:  Write LEF header for cell map9v3
Diagnostic:  Writing LEF output for cell map9v3
Diagnostic:  Scale value is 0.050000
Extracting XOR2X1 into XOR2X1.ext:
Extracting NOR3X1 into NOR3X1.ext:
Extracting XNOR2X1 into XNOR2X1.ext:
Extracting NAND2X1 into NAND2X1.ext:
Extracting AOI22X1 into AOI22X1.ext:
Extracting CLKBUF1 into CLKBUF1.ext:
Extracting AND2X2 into AND2X2.ext:
Extracting OAI21X1 into OAI21X1.ext:
Extracting MUX2X1 into MUX2X1.ext:
Extracting NAND3X1 into NAND3X1.ext:
Extracting NOR2X1 into NOR2X1.ext:
Extracting AOI21X1 into AOI21X1.ext:
Extracting INVX1 into INVX1.ext:
Extracting FILL into FILL.ext:
Extracting DFFSR into DFFSR.ext:
Completed 100%
Extracting BUFX2 into BUFX2.ext:
Extracting map9v3 into map9v3.ext:
Completed 5%
Completed 11%
Completed 16%
Completed 21%
Completed 27%
Completed 32%
Completed 37%
Completed 42%
Completed 48%
Completed 53%
Completed 58%
Completed 64%
Completed 69%
Completed 74%
Completed 80%
Completed 85%
Completed 90%
Completed 95%

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running magic 8.2.110
magic -dnull -noconsole  migrate_map9v3.tcl

Magic 8.2 revision 110 - Compiled on Sun Apr 28 16:56:58 PDT 2019.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
Loading "migrate_map9v3.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
This action cannot be undone.
LEF Read, Line 16: Unknown keyword "OBS" in LEF file; ignoring.
LEF Read, Line 17: Unknown keyword "PIN" in LEF file; ignoring.
LEF file:  Defines site corner (ignored)
LEF file:  Defines site IO (ignored)
LEF file:  Defines site core (ignored)
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "A" from metal1 to m2contact in cell XNOR2X1.
LEF read: Processed 3179 lines.
LEF Read: encountered 2 errors total.
Reading DEF data from file map9v3.def.
This action cannot be undone.
Processed 3 vias total.
Processed 278 subcell instances total.
Processed 40 pins total.
Processed 219 nets total.
LEF Read, Line 3002: Warning:  Number of nets read (36) does not match the number declared (35).
DEF read: Processed 3003 lines.
LEF Read: encountered 1 error total.
Generating LEF output map9v3.lef for cell map9v3:
Diagnostic:  Write LEF header for cell map9v3
Diagnostic:  Writing LEF output for cell map9v3
Diagnostic:  Scale value is 0.050000
Extracting XOR2X1 into XOR2X1.ext:
Extracting NOR3X1 into NOR3X1.ext:
Extracting XNOR2X1 into XNOR2X1.ext:
Extracting NAND2X1 into NAND2X1.ext:
Extracting AOI22X1 into AOI22X1.ext:
Extracting CLKBUF1 into CLKBUF1.ext:
Extracting AND2X2 into AND2X2.ext:
Extracting OAI21X1 into OAI21X1.ext:
Extracting MUX2X1 into MUX2X1.ext:
Extracting NAND3X1 into NAND3X1.ext:
Extracting NOR2X1 into NOR2X1.ext:
Extracting AOI21X1 into AOI21X1.ext:
Extracting INVX1 into INVX1.ext:
Extracting FILL into FILL.ext:
Extracting DFFSR into DFFSR.ext:
Completed 100%
Extracting BUFX2 into BUFX2.ext:
Extracting map9v3 into map9v3.ext:
Completed 5%
Completed 11%
Completed 16%
Completed 21%
Completed 27%
Completed 32%
Completed 37%
Completed 42%
Completed 48%
Completed 53%
Completed 58%
Completed 64%

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project map9v3
Running magic 8.2.110
magic -dnull -noconsole  /home/openvlsi/openvlsi/examples/qflow/layout/generate_gds_map9v3.tcl

Magic 8.2 revision 110 - Compiled on Sun Apr 28 16:56:58 PDT 2019.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
Loading "/home/openvlsi/openvlsi/examples/qflow/layout/generate_gds_map9v3.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Warning: Calma reading is not undoable!  I hope that's OK.
Library written using GDS-II Release 3.0
Library name: iit_stdcells
Reading "FILL".
Moving label "vdd" from space to metal1 in cell FILL.
Moving label "gnd" from space to metal1 in cell FILL.
Reading "AND2X1".
Moving label "Y" from space to metal1 in cell AND2X1.
Moving label "B" from space to metal1 in cell AND2X1.
Moving label "vdd" from space to metal1 in cell AND2X1.
Moving label "gnd" from space to metal1 in cell AND2X1.
Moving label "A" from space to metal1 in cell AND2X1.
Reading "AND2X2".
Moving label "vdd" from space to metal1 in cell AND2X2.
Moving label "gnd" from space to metal1 in cell AND2X2.
Moving label "A" from space to metal1 in cell AND2X2.
Moving label "B" from space to metal1 in cell AND2X2.
Moving label "Y" from space to metal1 in cell AND2X2.
Reading "AOI21X1".
Moving label "gnd" from space to metal1 in cell AOI21X1.
Moving label "vdd" from space to metal1 in cell AOI21X1.
Moving label "A" from space to metal1 in cell AOI21X1.
Moving label "B" from space to metal1 in cell AOI21X1.
Moving label "Y" from space to metal1 in cell AOI21X1.
Moving label "C" from space to metal1 in cell AOI21X1.
Reading "AOI22X1".
Moving label "gnd" from space to metal1 in cell AOI22X1.
Moving label "vdd" from space to metal1 in cell AOI22X1.
Moving label "C" from space to metal1 in cell AOI22X1.
Moving label "D" from space to metal1 in cell AOI22X1.
Moving label "Y" from space to metal1 in cell AOI22X1.
Moving label "A" from space to metal1 in cell AOI22X1.
Moving label "B" from space to metal1 in cell AOI22X1.
Reading "BUFX2".
Moving label "vdd" from space to metal1 in cell BUFX2.
Moving label "gnd" from space to metal1 in cell BUFX2.
Moving label "A" from space to metal1 in cell BUFX2.
Moving label "Y" from space to metal1 in cell BUFX2.
Reading "BUFX4".
Moving label "vdd" from space to metal1 in cell BUFX4.
Moving label "gnd" from space to metal1 in cell BUFX4.
Moving label "A" from space to metal1 in cell BUFX4.
Moving label "Y" from space to metal1 in cell BUFX4.
Reading "DFFNEGX1".
Moving label "CLK" from space to metal1 in cell DFFNEGX1.
Moving label "vdd" from space to metal1 in cell DFFNEGX1.
Moving label "D" from space to metal1 in cell DFFNEGX1.
Moving label "gnd" from space to metal1 in cell DFFNEGX1.
Moving label "Q" from space to metal1 in cell DFFNEGX1.
Reading "NOR3X1".
Moving label "vdd" from space to metal1 in cell NOR3X1.
Moving label "gnd" from space to metal1 in cell NOR3X1.
Moving label "B" from space to metal1 in cell NOR3X1.
Moving label "C" from space to metal1 in cell NOR3X1.
Moving label "A" from space to metal1 in cell NOR3X1.
Moving label "Y" from space to metal1 in cell NOR3X1.
Reading "DFFPOSX1".
Moving label "vdd" from space to metal1 in cell DFFPOSX1.
Moving label "D" from space to metal1 in cell DFFPOSX1.
Moving label "gnd" from space to metal1 in cell DFFPOSX1.
Moving label "Q" from space to metal1 in cell DFFPOSX1.
Moving label "CLK" from space to metal1 in cell DFFPOSX1.
Reading "FAX1".
Moving label "gnd" from space to metal1 in cell FAX1.
Moving label "vdd" from space to metal1 in cell FAX1.
Moving label "A" from space to metal1 in cell FAX1.
Moving label "B" from space to metal1 in cell FAX1.
Moving label "C" from space to metal1 in cell FAX1.
Moving label "YC" from space to metal1 in cell FAX1.
Moving label "YS" from space to metal1 in cell FAX1.
Reading "HAX1".
Moving label "vdd" from space to metal1 in cell HAX1.
Moving label "gnd" from space to metal1 in cell HAX1.
Moving label "YC" from space to metal1 in cell HAX1.
Moving label "A" from space to metal1 in cell HAX1.
Moving label "B" from space to metal1 in cell HAX1.
Moving label "YS" from space to metal1 in cell HAX1.
Reading "INVX1".
Moving label "A" from space to metal1 in cell INVX1.
Moving label "Y" from space to metal1 in cell INVX1.
Moving label "vdd" from space to metal1 in cell INVX1.
Moving label "gnd" from space to metal1 in cell INVX1.
Reading "INVX2".
Moving label "vdd" from space to metal1 in cell INVX2.
Moving label "gnd" from space to metal1 in cell INVX2.
Moving label "Y" from space to metal1 in cell INVX2.
Moving label "A" from space to metal1 in cell INVX2.
Reading "INVX4".
Moving label "vdd" from space to metal1 in cell INVX4.
Moving label "gnd" from space to metal1 in cell INVX4.
Moving label "Y" from space to metal1 in cell INVX4.
Moving label "A" from space to metal1 in cell INVX4.
Reading "INVX8".
Moving label "vdd" from space to metal1 in cell INVX8.
Moving label "gnd" from space to metal1 in cell INVX8.
Moving label "A" from space to metal1 in cell INVX8.
Moving label "Y" from space to metal1 in cell INVX8.
Reading "NAND2X1".
Moving label "vdd" from space to metal1 in cell NAND2X1.
Moving label "Y" from space to metal1 in cell NAND2X1.
Moving label "gnd" from space to metal1 in cell NAND2X1.
Moving label "A" from space to metal1 in cell NAND2X1.
Moving label "B" from space to metal1 in cell NAND2X1.
Reading "NAND3X1".
Moving label "B" from space to metal1 in cell NAND3X1.
Moving label "vdd" from space to metal1 in cell NAND3X1.
Moving label "gnd" from space to metal1 in cell NAND3X1.
Moving label "A" from space to metal1 in cell NAND3X1.
Moving label "C" from space to metal1 in cell NAND3X1.
Moving label "Y" from space to metal1 in cell NAND3X1.
Reading "NOR2X1".
Moving label "vdd" from space to metal1 in cell NOR2X1.
Moving label "B" from space to metal1 in cell NOR2X1.
Moving label "gnd" from space to metal1 in cell NOR2X1.
Moving label "Y" from space to metal1 in cell NOR2X1.
Moving label "A" from space to metal1 in cell NOR2X1.
Reading "OAI21X1".
Moving label "gnd" from space to metal1 in cell OAI21X1.
Moving label "vdd" from space to metal1 in cell OAI21X1.
Moving label "A" from space to metal1 in cell OAI21X1.
Moving label "B" from space to metal1 in cell OAI21X1.
Moving label "Y" from space to metal1 in cell OAI21X1.
Moving label "C" from space to metal1 in cell OAI21X1.
Reading "OAI22X1".
Moving label "gnd" from space to metal1 in cell OAI22X1.
Moving label "vdd" from space to metal1 in cell OAI22X1.
Moving label "D" from space to metal1 in cell OAI22X1.
Moving label "C" from space to metal1 in cell OAI22X1.
Moving label "A" from space to metal1 in cell OAI22X1.
Moving label "B" from space to metal1 in cell OAI22X1.
Moving label "Y" from space to metal1 in cell OAI22X1.
Reading "OR2X1".
Moving label "Y" from space to metal1 in cell OR2X1.
Moving label "B" from space to metal1 in cell OR2X1.
Moving label "vdd" from space to metal1 in cell OR2X1.
Moving label "gnd" from space to metal1 in cell OR2X1.
Moving label "A" from space to metal1 in cell OR2X1.
Reading "OR2X2".
Moving label "Y" from space to metal1 in cell OR2X2.
Moving label "B" from space to metal1 in cell OR2X2.
Moving label "vdd" from space to metal1 in cell OR2X2.
Moving label "gnd" from space to metal1 in cell OR2X2.
Moving label "A" from space to metal1 in cell OR2X2.
Reading "TBUFX1".
Moving label "vdd" from space to metal1 in cell TBUFX1.
Moving label "gnd" from space to metal1 in cell TBUFX1.
Moving label "EN" from space to metal1 in cell TBUFX1.
Moving label "A" from space to metal1 in cell TBUFX1.
Moving label "Y" from space to metal1 in cell TBUFX1.
Reading "TBUFX2".
Moving label "vdd" from space to metal1 in cell TBUFX2.
Moving label "gnd" from space to metal1 in cell TBUFX2.
Moving label "A" from space to metal1 in cell TBUFX2.
Moving label "EN" from space to metal1 in cell TBUFX2.
Moving label "Y" from space to metal1 in cell TBUFX2.
Reading "XOR2X1".
Moving label "Y" from space to metal1 in cell XOR2X1.
Moving label "vdd" from space to metal1 in cell XOR2X1.
Moving label "B" from space to metal1 in cell XOR2X1.
Moving label "A" from space to metal1 in cell XOR2X1.
Moving label "gnd" from space to metal1 in cell XOR2X1.
Reading "MUX2X1".
Moving label "S" from space to metal1 in cell MUX2X1.
Moving label "vdd" from space to metal1 in cell MUX2X1.
Moving label "gnd" from space to metal1 in cell MUX2X1.
Moving label "Y" from space to metal1 in cell MUX2X1.
Moving label "A" from space to metal1 in cell MUX2X1.
Moving label "B" from space to metal1 in cell MUX2X1.
Reading "XNOR2X1".
Moving label "A" from space to metal1 in cell XNOR2X1.
Moving label "B" from space to metal1 in cell XNOR2X1.
Moving label "gnd" from space to metal1 in cell XNOR2X1.
Moving label "vdd" from space to metal1 in cell XNOR2X1.
Moving label "Y" from space to metal1 in cell XNOR2X1.
Reading "LATCH".
Moving label "D" from space to metal1 in cell LATCH.
Moving label "Q" from space to metal1 in cell LATCH.
Moving label "gnd" from space to metal1 in cell LATCH.
Moving label "vdd" from space to metal1 in cell LATCH.
Moving label "CLK" from space to metal1 in cell LATCH.
Reading "DFFSR".
Moving label "gnd" from space to metal1 in cell DFFSR.
Moving label "vdd" from space to metal1 in cell DFFSR.
Moving label "D" from space to metal1 in cell DFFSR.
Moving label "S" from space to metal1 in cell DFFSR.
Moving label "R" from space to metal1 in cell DFFSR.
Moving label "Q" from space to metal1 in cell DFFSR.
Moving label "CLK" from space to metal1 in cell DFFSR.
Reading "CLKBUF1".
Moving label "A" from space to metal1 in cell CLKBUF1.
Moving label "vdd" from space to metal1 in cell CLKBUF1.
Moving label "gnd" from space to metal1 in cell CLKBUF1.
Moving label "Y" from space to metal1 in cell CLKBUF1.
Reading "CLKBUF2".
Moving label "vdd" from space to metal1 in cell CLKBUF2.
Moving label "gnd" from space to metal1 in cell CLKBUF2.
Moving label "A" from space to metal1 in cell CLKBUF2.
Moving label "Y" from space to metal1 in cell CLKBUF2.
Reading "CLKBUF3".
Moving label "gnd" from space to metal1 in cell CLKBUF3.
Moving label "vdd" from space to metal1 in cell CLKBUF3.
Moving label "A" from space to metal1 in cell CLKBUF3.
Moving label "Y" from space to metal1 in cell CLKBUF3.
Reading "iit_stdcells".
Scaled magic input cell map9v3 geometry by factor of 2
Processing timestamp mismatches: FILL, BUFX2, INVX1, OAI21X1, DFFSR, AND2X2, NOR2X1, NAND3X1, NAND2X1, XOR2X1, CLKBUF1, MUX2X1, XNOR2X1, AOI21X1, NOR3X1, AOI22X1.
